<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>峰影的博客</title>
  <icon>https://fy2008.github.io/icon.png</icon>
  <subtitle>电子爱好者</subtitle>
  <link href="https://fy2008.github.io/atom.xml" rel="self"/>
  
  <link href="https://fy2008.github.io/"/>
  <updated>2021-02-06T19:02:17.613Z</updated>
  <id>https://fy2008.github.io/</id>
  
  <author>
    <name>zsf90</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Qt Quick 元素布局</title>
    <link href="https://fy2008.github.io/2021/02/06/Qt-Quick-Element-Layout/"/>
    <id>https://fy2008.github.io/2021/02/06/Qt-Quick-Element-Layout/</id>
    <published>2021-02-06T15:13:36.000Z</published>
    <updated>2021-02-06T19:02:17.613Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在 &lt;code&gt;Qt Quick&lt;/code&gt; 中有两套与元素布局相关的类库，一套叫作 &lt;code&gt;Item Positioner&lt;/code&gt; (定位器)，一套叫作 &lt;code&gt;Item Layout&lt;/code&gt; (布局)。其实我们前面还讲了一个锚布局，它通过</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Qt" scheme="https://fy2008.github.io/tags/Qt/"/>
    
    <category term="QML" scheme="https://fy2008.github.io/tags/QML/"/>
    
    <category term="Layout" scheme="https://fy2008.github.io/tags/Layout/"/>
    
  </entry>
  
  <entry>
    <title>销毁动态创建的对象</title>
    <link href="https://fy2008.github.io/2021/02/06/delete-dynamic-object/"/>
    <id>https://fy2008.github.io/2021/02/06/delete-dynamic-object/</id>
    <published>2021-02-06T13:50:27.000Z</published>
    <updated>2021-02-06T15:07:56.429Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;有些软件，在不需要一个动态创建的 &lt;code&gt;QML&lt;/code&gt; 对象时，仅仅是把它的 &lt;code&gt;visible&lt;/code&gt; 属性设置为 &lt;code&gt;false&lt;/code&gt; 或者把 &lt;code&gt;opacity&lt;/code&gt; 属性设置为</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Qt" scheme="https://fy2008.github.io/tags/Qt/"/>
    
    <category term="QML" scheme="https://fy2008.github.io/tags/QML/"/>
    
  </entry>
  
  <entry>
    <title>在 ECMAScript 中动态创建对象</title>
    <link href="https://fy2008.github.io/2021/02/05/qml-ecmascript-demo-1/"/>
    <id>https://fy2008.github.io/2021/02/05/qml-ecmascript-demo-1/</id>
    <published>2021-02-05T13:19:01.000Z</published>
    <updated>2021-02-06T13:42:21.306Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;QML&lt;/code&gt; 支持在 &lt;code&gt;ECMAScript&lt;/code&gt; 中动态创建对象。这对于延迟对象的创建、缩短应用的启动时间都是有帮助的。同时这种机制也使得我们可以根据用户的输入或者某些事件动态地将可见元素添加到应用场景中。&lt;/p&gt;
&lt;p&gt;在</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Qt" scheme="https://fy2008.github.io/tags/Qt/"/>
    
    <category term="QML" scheme="https://fy2008.github.io/tags/QML/"/>
    
    <category term="ECMAScript" scheme="https://fy2008.github.io/tags/ECMAScript/"/>
    
    <category term="动态创建对象" scheme="https://fy2008.github.io/tags/%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>QML Loader 简单使用</title>
    <link href="https://fy2008.github.io/2021/02/05/qml-loader-demo-1/"/>
    <id>https://fy2008.github.io/2021/02/05/qml-loader-demo-1/</id>
    <published>2021-02-05T05:36:37.000Z</published>
    <updated>2021-02-05T11:34:44.297Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;Loader&lt;/code&gt; 是用来动态加载 &lt;code&gt;QML&lt;/code&gt; 组件的。我们可以把 &lt;code&gt;Loader&lt;/code&gt; 作为占位符使用，在需要显示某个元素时，才使用 &lt;code&gt;Loader&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Qt" scheme="https://fy2008.github.io/tags/Qt/"/>
    
    <category term="QML" scheme="https://fy2008.github.io/tags/QML/"/>
    
    <category term="Loader" scheme="https://fy2008.github.io/tags/Loader/"/>
    
  </entry>
  
  <entry>
    <title>Qt QML 颜色提取小程序</title>
    <link href="https://fy2008.github.io/2021/02/05/qml-color-picker/"/>
    <id>https://fy2008.github.io/2021/02/05/qml-color-picker/</id>
    <published>2021-02-04T16:07:49.000Z</published>
    <updated>2021-02-05T05:27:36.581Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这篇文章来分享一个有 &lt;code&gt;Qt Quick&lt;/code&gt; 写的颜色提取小程序，实现的功能很简单，在窗口左下角放置几个不同颜色的矩形，每个矩形的颜色不同，在窗口顶部中间的位置放置一个文本 &lt;code&gt;Text&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Qt" scheme="https://fy2008.github.io/tags/Qt/"/>
    
    <category term="QML" scheme="https://fy2008.github.io/tags/QML/"/>
    
    <category term="Color" scheme="https://fy2008.github.io/tags/Color/"/>
    
    <category term="Component" scheme="https://fy2008.github.io/tags/Component/"/>
    
  </entry>
  
  <entry>
    <title>QML ECMAScript 基础</title>
    <link href="https://fy2008.github.io/2021/02/03/qml-ecmascript-base/"/>
    <id>https://fy2008.github.io/2021/02/03/qml-ecmascript-base/</id>
    <published>2021-02-03T03:20:05.000Z</published>
    <updated>2021-02-03T15:33:23.437Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;测试&lt;code&gt;ECMAScript&lt;/code&gt;的代码可发放在 Component.onCompleted: {}&lt;/p&gt;
&lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter hljs&quot;&gt;&lt;div</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Qt" scheme="https://fy2008.github.io/tags/Qt/"/>
    
    <category term="QML" scheme="https://fy2008.github.io/tags/QML/"/>
    
    <category term="ECMAScript" scheme="https://fy2008.github.io/tags/ECMAScript/"/>
    
  </entry>
  
  <entry>
    <title>QML 基础</title>
    <link href="https://fy2008.github.io/2021/02/02/qml-base/"/>
    <id>https://fy2008.github.io/2021/02/02/qml-base/</id>
    <published>2021-02-02T11:35:32.000Z</published>
    <updated>2021-02-05T05:28:44.354Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;QML&lt;/code&gt; 是一种类似 &lt;code&gt;CSS&lt;/code&gt; 与 &lt;code&gt;JavaScript&lt;/code&gt; 相结合的描述用户界面的语言。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;QML&lt;/code&gt; 实现并扩展了</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Qt" scheme="https://fy2008.github.io/tags/Qt/"/>
    
    <category term="QML" scheme="https://fy2008.github.io/tags/QML/"/>
    
  </entry>
  
  <entry>
    <title>第一个 Qt Quick 程序</title>
    <link href="https://fy2008.github.io/2021/02/02/qt-quick-helloworld/"/>
    <id>https://fy2008.github.io/2021/02/02/qt-quick-helloworld/</id>
    <published>2021-02-02T10:46:17.000Z</published>
    <updated>2021-02-02T11:22:44.904Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;用 Qt Create 创建第一个 Qt Quick 程序。&lt;/p&gt;
&lt;h2 id=&quot;新建-Qt-Quick-程序&quot;&gt;&lt;a href=&quot;#新建-Qt-Quick-程序&quot; class=&quot;headerlink&quot; title=&quot;新建 Qt Quick 程序&quot;&gt;&lt;/a&gt;新建 Qt</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Qt" scheme="https://fy2008.github.io/tags/Qt/"/>
    
    <category term="Qt Quick" scheme="https://fy2008.github.io/tags/Qt-Quick/"/>
    
    <category term="QML" scheme="https://fy2008.github.io/tags/QML/"/>
    
  </entry>
  
  <entry>
    <title>Qt Quick 动画</title>
    <link href="https://fy2008.github.io/2021/01/31/qt-quick-Animation/"/>
    <id>https://fy2008.github.io/2021/01/31/qt-quick-Animation/</id>
    <published>2021-01-31T12:16:46.000Z</published>
    <updated>2021-02-02T17:08:11.436Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;常用动画&quot;&gt;&lt;a href=&quot;#常用动画&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CMake 入门</title>
    <link href="https://fy2008.github.io/2021/01/21/CMake/"/>
    <id>https://fy2008.github.io/2021/01/21/CMake/</id>
    <published>2021-01-21T01:29:20.000Z</published>
    <updated>2021-01-23T08:10:13.374Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;CMake is an open-source, cross-platform family of tools</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>C语言中&quot;return;&quot;的使用介绍</title>
    <link href="https://fy2008.github.io/2021/01/06/c-language-return-semicolon/"/>
    <id>https://fy2008.github.io/2021/01/06/c-language-return-semicolon/</id>
    <published>2021-01-06T06:36:20.000Z</published>
    <updated>2021-01-06T06:51:31.839Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在 &lt;code&gt;C语言&lt;/code&gt;中 &lt;code&gt;return;&lt;/code&gt; 用于从返回值为 &lt;code&gt;void&lt;/code&gt; 的函数中强制结束函数，把程序的控制权交给函数的调用者。&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="C语言" scheme="https://fy2008.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>STM32 USART 函数列表和一些类型定义</title>
    <link href="https://fy2008.github.io/2021/01/05/stm32-hal-uart-1/"/>
    <id>https://fy2008.github.io/2021/01/05/stm32-hal-uart-1/</id>
    <published>2021-01-05T10:05:06.000Z</published>
    <updated>2021-01-06T05:13:49.859Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇文章是一篇介绍 STM32 USART 相关函数的笔记，下次忘记的时候可以方便查找。&lt;/p&gt;
&lt;h2 id=&quot;串口寄存器列表&quot;&gt;&lt;a href=&quot;#串口寄存器列表&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="电子技术" scheme="https://fy2008.github.io/categories/%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="STM32" scheme="https://fy2008.github.io/tags/STM32/"/>
    
    <category term="USART" scheme="https://fy2008.github.io/tags/USART/"/>
    
    <category term="串口" scheme="https://fy2008.github.io/tags/%E4%B8%B2%E5%8F%A3/"/>
    
    <category term="函数" scheme="https://fy2008.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>FreeRTOS STM32 实现LED闪烁，KEY任务挂起与恢复任务</title>
    <link href="https://fy2008.github.io/2021/01/04/stm32-freertos-key-led/"/>
    <id>https://fy2008.github.io/2021/01/04/stm32-freertos-key-led/</id>
    <published>2021-01-04T02:14:20.000Z</published>
    <updated>2021-01-06T05:08:59.183Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这两天跟着&lt;code&gt;哔哩哔哩&lt;/code&gt;学习了下 &lt;code&gt;FreeRTOS&lt;/code&gt;，这里把学习中实现的一个入门代码分享出来。&lt;/p&gt;
&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="电子技术" scheme="https://fy2008.github.io/categories/%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="STM32" scheme="https://fy2008.github.io/tags/STM32/"/>
    
    <category term="FreeRTOS" scheme="https://fy2008.github.io/tags/FreeRTOS/"/>
    
    <category term="编程" scheme="https://fy2008.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>w25qxx Flash使用笔记</title>
    <link href="https://fy2008.github.io/2020/12/31/w251xx/"/>
    <id>https://fy2008.github.io/2020/12/31/w251xx/</id>
    <published>2020-12-31T07:54:31.000Z</published>
    <updated>2020-12-31T08:19:26.571Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;w25qxx&lt;/code&gt; 是一系列 &lt;code&gt;SPI Flash&lt;/code&gt; 存储芯片的总称，这些芯片包括很多型号如：&lt;code&gt;w25q16&lt;/code&gt; &lt;code&gt;w25q32&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="电子技术" scheme="https://fy2008.github.io/categories/%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="w5qxx" scheme="https://fy2008.github.io/tags/w5qxx/"/>
    
  </entry>
  
  <entry>
    <title>存储器类型介绍</title>
    <link href="https://fy2008.github.io/2020/12/30/memorizer-type/"/>
    <id>https://fy2008.github.io/2020/12/30/memorizer-type/</id>
    <published>2020-12-30T04:55:29.000Z</published>
    <updated>2020-12-30T12:01:01.946Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在学习单片机的时候，老是忘记各种存储器&lt;code&gt;RAM&lt;/code&gt;,&lt;code&gt;ROM&lt;/code&gt;,&lt;code&gt;FLASH&lt;/code&gt;等等类型的一些区别，这里做个笔记来记录一些常用的存储器类型。&lt;/p&gt;
&lt;p&gt;存储器按是否易失分为：易失型和非易失型&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="存储器" scheme="https://fy2008.github.io/tags/%E5%AD%98%E5%82%A8%E5%99%A8/"/>
    
    <category term="ROM" scheme="https://fy2008.github.io/tags/ROM/"/>
    
    <category term="RAM" scheme="https://fy2008.github.io/tags/RAM/"/>
    
    <category term="FLASH" scheme="https://fy2008.github.io/tags/FLASH/"/>
    
    <category term="SDRAM" scheme="https://fy2008.github.io/tags/SDRAM/"/>
    
  </entry>
  
  <entry>
    <title>STM32 GPIO 寄存器</title>
    <link href="https://fy2008.github.io/2020/12/30/stm32-gpio/"/>
    <id>https://fy2008.github.io/2020/12/30/stm32-gpio/</id>
    <published>2020-12-30T00:43:32.000Z</published>
    <updated>2020-12-31T07:09:08.260Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇文章来了解下 &lt;code&gt;stm32&lt;/code&gt; 的 &lt;code&gt;gpio&lt;/code&gt; 寄存器，&lt;code&gt;STM32&lt;/code&gt;的&lt;code&gt;GPIO&lt;/code&gt;共有11个寄存器，下面来详细介绍：&lt;/p&gt;
&lt;p&gt;每个通用 &lt;code&gt;I/O&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="电子技术" scheme="https://fy2008.github.io/categories/%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="STM32" scheme="https://fy2008.github.io/tags/STM32/"/>
    
    <category term="GPIO" scheme="https://fy2008.github.io/tags/GPIO/"/>
    
    <category term="IO" scheme="https://fy2008.github.io/tags/IO/"/>
    
    <category term="寄存器" scheme="https://fy2008.github.io/tags/%E5%AF%84%E5%AD%98%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>推荐一款 STM32 的 vscode 插件，stm32-for-vscode</title>
    <link href="https://fy2008.github.io/2020/12/29/stm32-for-vscode/"/>
    <id>https://fy2008.github.io/2020/12/29/stm32-for-vscode/</id>
    <published>2020-12-29T06:29:35.000Z</published>
    <updated>2020-12-29T07:59:10.388Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/bmd-studio/stm32-for-vscode&quot;&gt;stm32-for-vscode&lt;/a&gt; 是一款用于使用 &lt;code&gt;vscode&lt;/code&gt; 来开发 &lt;code&gt;stm32&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="电子技术" scheme="https://fy2008.github.io/categories/%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="STM32" scheme="https://fy2008.github.io/tags/STM32/"/>
    
    <category term="vscode" scheme="https://fy2008.github.io/tags/vscode/"/>
    
    <category term="插件" scheme="https://fy2008.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>MSYS2 命令笔记</title>
    <link href="https://fy2008.github.io/2020/12/29/msys2-command/"/>
    <id>https://fy2008.github.io/2020/12/29/msys2-command/</id>
    <published>2020-12-29T04:57:02.000Z</published>
    <updated>2020-12-29T06:19:24.421Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;首先说说什么是 &lt;code&gt;MSYS2&lt;/code&gt; ？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MSYS2 （Minimal SYStem 2)&lt;/code&gt; 是一个&lt;code&gt;MSYS&lt;/code&gt;的独立改写版本，主要用于 &lt;code&gt;shell&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="MSYS2" scheme="https://fy2008.github.io/tags/MSYS2/"/>
    
    <category term="命令" scheme="https://fy2008.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>用 VSCode 开发 STM32 项目</title>
    <link href="https://fy2008.github.io/2020/12/29/stm32-vscode-dev/"/>
    <id>https://fy2008.github.io/2020/12/29/stm32-vscode-dev/</id>
    <published>2020-12-28T16:38:30.000Z</published>
    <updated>2020-12-29T08:05:33.264Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;vscode 是一款最好用的开发工具之一，该软件非常好用强大，通过安装插件几乎可以完成所有的开发工作。&lt;/p&gt;
&lt;p&gt;用 vscode 开发 stm32 的步骤是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用&lt;code&gt;STM32CubeMX&lt;/code&gt; 生成</summary>
        
      
    
    
    
    <category term="电子技术" scheme="https://fy2008.github.io/categories/%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="STM32" scheme="https://fy2008.github.io/tags/STM32/"/>
    
    <category term="vscode" scheme="https://fy2008.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 配置笔记</title>
    <link href="https://fy2008.github.io/2020/12/28/Hexo-%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/"/>
    <id>https://fy2008.github.io/2020/12/28/Hexo-%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/</id>
    <published>2020-12-28T06:45:03.000Z</published>
    <updated>2020-12-29T06:36:37.893Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这是一篇介绍 &lt;code&gt;hexo&lt;/code&gt; 配置的文章。&lt;/p&gt;
&lt;h2 id=&quot;选择一款主题&quot;&gt;&lt;a href=&quot;#选择一款主题&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="计算机" scheme="https://fy2008.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Hexo" scheme="https://fy2008.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
